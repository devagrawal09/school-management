/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as EmployeesImport } from './routes/employees'
import { Route as IndexImport } from './routes/index'
import { Route as EmployeesIndexImport } from './routes/employees.index'
import { Route as EmployeesNewImport } from './routes/employees.new'
import { Route as EmployeesEmployeeIdImport } from './routes/employees.$employeeId'
import { Route as EmployeesEmployeeIdIndexImport } from './routes/employees.$employeeId/index'
import { Route as EmployeesEmployeeIdPaymentsImport } from './routes/employees.$employeeId/payments'
import { Route as EmployeesEmployeeIdPaymentsIndexImport } from './routes/employees.$employeeId/payments.index'
import { Route as EmployeesEmployeeIdPaymentsNewImport } from './routes/employees.$employeeId/payments.new'
import { Route as EmployeesEmployeeIdPaymentsPaymentIdImport } from './routes/employees.$employeeId/payments.$paymentId'

// Create/Update Routes

const EmployeesRoute = EmployeesImport.update({
  path: '/employees',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const EmployeesIndexRoute = EmployeesIndexImport.update({
  path: '/',
  getParentRoute: () => EmployeesRoute,
} as any)

const EmployeesNewRoute = EmployeesNewImport.update({
  path: '/new',
  getParentRoute: () => EmployeesRoute,
} as any)

const EmployeesEmployeeIdRoute = EmployeesEmployeeIdImport.update({
  path: '/$employeeId',
  getParentRoute: () => EmployeesRoute,
} as any)

const EmployeesEmployeeIdIndexRoute = EmployeesEmployeeIdIndexImport.update({
  path: '/',
  getParentRoute: () => EmployeesEmployeeIdRoute,
} as any)

const EmployeesEmployeeIdPaymentsRoute =
  EmployeesEmployeeIdPaymentsImport.update({
    path: '/payments',
    getParentRoute: () => EmployeesEmployeeIdRoute,
  } as any)

const EmployeesEmployeeIdPaymentsIndexRoute =
  EmployeesEmployeeIdPaymentsIndexImport.update({
    path: '/',
    getParentRoute: () => EmployeesEmployeeIdPaymentsRoute,
  } as any)

const EmployeesEmployeeIdPaymentsNewRoute =
  EmployeesEmployeeIdPaymentsNewImport.update({
    path: '/new',
    getParentRoute: () => EmployeesEmployeeIdPaymentsRoute,
  } as any)

const EmployeesEmployeeIdPaymentsPaymentIdRoute =
  EmployeesEmployeeIdPaymentsPaymentIdImport.update({
    path: '/$paymentId',
    getParentRoute: () => EmployeesEmployeeIdPaymentsRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/employees': {
      preLoaderRoute: typeof EmployeesImport
      parentRoute: typeof rootRoute
    }
    '/employees/$employeeId': {
      preLoaderRoute: typeof EmployeesEmployeeIdImport
      parentRoute: typeof EmployeesImport
    }
    '/employees/new': {
      preLoaderRoute: typeof EmployeesNewImport
      parentRoute: typeof EmployeesImport
    }
    '/employees/': {
      preLoaderRoute: typeof EmployeesIndexImport
      parentRoute: typeof EmployeesImport
    }
    '/employees/$employeeId/payments': {
      preLoaderRoute: typeof EmployeesEmployeeIdPaymentsImport
      parentRoute: typeof EmployeesEmployeeIdImport
    }
    '/employees/$employeeId/': {
      preLoaderRoute: typeof EmployeesEmployeeIdIndexImport
      parentRoute: typeof EmployeesEmployeeIdImport
    }
    '/employees/$employeeId/payments/$paymentId': {
      preLoaderRoute: typeof EmployeesEmployeeIdPaymentsPaymentIdImport
      parentRoute: typeof EmployeesEmployeeIdPaymentsImport
    }
    '/employees/$employeeId/payments/new': {
      preLoaderRoute: typeof EmployeesEmployeeIdPaymentsNewImport
      parentRoute: typeof EmployeesEmployeeIdPaymentsImport
    }
    '/employees/$employeeId/payments/': {
      preLoaderRoute: typeof EmployeesEmployeeIdPaymentsIndexImport
      parentRoute: typeof EmployeesEmployeeIdPaymentsImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren([
  IndexRoute,
  EmployeesRoute.addChildren([
    EmployeesEmployeeIdRoute.addChildren([
      EmployeesEmployeeIdPaymentsRoute.addChildren([
        EmployeesEmployeeIdPaymentsPaymentIdRoute,
        EmployeesEmployeeIdPaymentsNewRoute,
        EmployeesEmployeeIdPaymentsIndexRoute,
      ]),
      EmployeesEmployeeIdIndexRoute,
    ]),
    EmployeesNewRoute,
    EmployeesIndexRoute,
  ]),
])

/* prettier-ignore-end */
